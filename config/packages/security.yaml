security:

  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

  role_hierarchy:
    ROLE_SUPER_ADMIN: ROLE_ADMINISTRATIF
    ROLE_QUALITE: ROLE_ADMINISTRATIF
    ROLE_SCOLARITE: ROLE_ADMINISTRATIF
    ROLE_RH: ROLE_ADMINISTRATIF
    ROLE_FINANCE: ROLE_ADMINISTRATIF
    ROLE_EDUSIGN: ROLE_EDUSIGN

  providers:
    chain_provider:
      chain:
        providers: [ personnel_user, etudiant_user ]
    personnel_user:
      entity: { class: App\Entity\Personnel, property: username }
    etudiant_user:
      entity: { class: App\Entity\Etudiant, property: username }

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    api:
      pattern: ^/api/
      stateless: true
      provider: chain_provider
      jwt: ~

    main:
      #access_denied_handler: App\Security\AccessDeniedHandler => si je débloque le choix du département bloque
      lazy: true
      provider: chain_provider
      custom_authenticator:
        - App\Security\LoginFormAuthenticator
        - App\Security\LoginCasAuthenticator
      entry_point: App\Security\LoginFormAuthenticator
      pattern: ^/
      #      remember_me:
      #        secret: '%kernel.secret%'
      logout:
        path: security_logout
        target: security_login
      form_login:
        login_path: security_login
        enable_csrf: true
      json_login:
        check_path: app_login
        username_path: username
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure

  access_control:
    - { path: '^/[a-z]{2}/api/login', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/api',       roles: PUBLIC_ACCESS } # todo: A sécuriser
    - { path: '^/[a-z]{2}/administration/edusign', roles: [ ROLE_EDUSIGN ] }
    - { path: '^/[a-z]{2}/api/unifolio', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/but', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/aide', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/borne', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/rdd', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/sso/redirect/cas', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/connexion', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/mentions-legales', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/enquete-qualite', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/login', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/administration', roles: [ ROLE_PERMANENT, ROLE_SUPER_ADMIN ] }
    - { path: '^/[a-z]{2}/ldap', roles: [ ROLE_PERMANENT, ROLE_SUPER_ADMIN, ROLE_RH ] }
    - { path: '^/[a-z]{2}/administratif', roles: [ ROLE_ADMINISTRATIF ] }
    - { path: '^/[a-z]{2}/api/synchronisation', roles: PUBLIC_ACCESS }
    - { path: '^/[a-z]{2}/', roles: IS_AUTHENTICATED_FULLY }
    - { path: '^/[a-z]{2}/api', roles: IS_AUTHENTICATED_FULLY }

when@test:
  security:
    password_hashers:
      # By default, password hashers are resource intensive and take time. This is
      # important to generate secure password hashes. In tests however, secure hashes
      # are not important, waste resources and increase test times. The following
      # reduces the work factor to the lowest possible values.
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
        algorithm: auto
        cost: 4 # Lowest possible value for bcrypt
        time_cost: 3 # Lowest possible value for argon
        memory_cost: 10 # Lowest possible value for argon
