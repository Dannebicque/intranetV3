{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/classes/Messages.js","src/classes/Permission.js","src/classes/Push.js","src/classes/Util.js","src/classes/agents/AbstractAgent.js","src/classes/agents/DesktopAgent.js","src/classes/agents/MSAgent.js","src/classes/agents/MobileChromeAgent.js","src/classes/agents/MobileFirefoxAgent.js","src/classes/agents/WebKitAgent.js","src/index.js"],"names":["f","exports","module","define","amd","window","global","self","this","Push","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","default","errors","incompatible","invalid_plugin","invalid_title","permission_denied","sw_notification_error","sw_registration_error","unknown_interface","Permission","_win","GRANTED","DEFAULT","DENIED","_permissions","arguments","_requestWithCallback","apply","_requestAsPromise","get","undefined","_this","Notification","permission","webkitNotifications","checkPermission","requestPermission","then","catch","_this2","Promise","h","navigator","mozNotification","external","msIsSiteMode","_currentId","_notifications","_Permission2","_agents","desktop","_DesktopAgent2","chrome","_MobileChromeAgent2","firefox","_MobileFirefoxAgent2","ms","_MSAgent2","webkit","_WebKitAgent2","_configuration","serviceWorker","fallback","_removeNotification","isSupported","close","_Messages2","hasOwnProperty","_closeNotification","timeout","setTimeout","_addNotification","addEventListener","JSON","parse","data","action","Number","isInteger","id","_prepareNotification","_this3","_Util2","isFunction","onClose","create","_o","config","_serviceWorkerCallback","title","_t","_n","onShow","onError","onClick","isString","has","_this4","_createCallback","request","tag","isObject","objectMerge","plugin","Util","toString","_typeof","AbstractAgent","DesktopAgent","_AbstractAgent","icon","isUndefined","x32","body","requireInteraction","MSAgent","msSiteModeClearIconOverlay","msSiteModeSetIconOverlay","x16","msSiteModeActivate","MobileChromeAgent","match","register","ready","link","origin","document","location","href","getFunctionBody","Object","assign","showNotification","vibrate","silent","getNotifications","active","postMessage","message","MobileFirefoxAgent","createNotification","show","WebKitAgent","cancel","_Push2"],"mappings":"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","file":"push.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const errorPrefix = 'PushError:';\n\nexport default {\n  errors: {\n    incompatible: `${errorPrefix} Push.js is incompatible with browser.`,\n    invalid_plugin: `${errorPrefix} plugin class missing from plugin manifest (invalid plugin). Please check the documentation.`,\n    invalid_title: `${errorPrefix} title of notification must be a string`,\n    permission_denied: `${errorPrefix} permission request declined`,\n    sw_notification_error: `${errorPrefix} could not show a ServiceWorker notification due to the following reason: `,\n    sw_registration_error: `${errorPrefix} could not register the ServiceWorker due to the following reason: `,\n    unknown_interface: `${errorPrefix} unable to create notification: unknown interface`,\n  }\n}\n","export default class Permission {\n\n  constructor(win) {\n    this._win = win;\n    this.GRANTED = 'granted';\n    this.DEFAULT = 'default';\n    this.DENIED = 'denied';\n    this._permissions = [\n      this.GRANTED,\n      this.DEFAULT,\n      this.DENIED\n    ];\n  }\n\n  /**\n   * Requests permission for desktop notifications\n   * @param {Function} onGranted - Function to execute once permission is granted\n   * @param {Function} onDenied - Function to execute once permission is denied\n   * @return {void, Promise}\n   */\n  request(onGranted, onDenied) {\n    return (arguments.length > 0) ? this._requestWithCallback(...arguments) : this._requestAsPromise();\n  }\n\n  /**\n   * Old permissions implementation deprecated in favor of a promise based one\n   * @deprecated Since V1.0.4\n   * @param {Function} onGranted - Function to execute once permission is granted\n   * @param {Function} onDenied - Function to execute once permission is denied\n   * @return {void}\n   */\n  _requestWithCallback(onGranted, onDenied) {\n    const existing = this.get();\n\n     var resolve = (result = this._win.Notification.permission) => {\n      if (typeof(result)==='undefined' && this._win.webkitNotifications)\n        result = this._win.webkitNotifications.checkPermission();\n      if (result === this.GRANTED || result === 0) {\n        if (onGranted) onGranted();\n      } else if (onDenied) onDenied();\n    }\n\n    /* Permissions already set */\n    if (existing !== this.DEFAULT) {\n      resolve(existing);\n    }\n    /* Safari 6+, Legacy webkit browsers */\n    else if (this._win.webkitNotifications && this._win.webkitNotifications.checkPermission) {\n      this._win.webkitNotifications.requestPermission(resolve);\n    }\n    /* Chrome 23+ */\n    else if (this._win.Notification && this._win.Notification.requestPermission) {\n      this._win.Notification.requestPermission().then(resolve).catch(function () {\n        if (onDenied) onDenied();\n      });\n    }\n    /* Let the user continue by default */\n    else if (onGranted) {\n      onGranted();\n    }\n  }\n\n  /**\n   * Requests permission for desktop notifications in a promise based way\n   * @return {Promise}\n   */\n  _requestAsPromise() {\n    const existing = this.get();\n\n    let isGranted = result => (result === this.GRANTED || result === 0);\n\n    /* Permissions already set */\n    var hasPermissions = (existing !== this.DEFAULT);\n\n    /* Safari 6+, Chrome 23+ */\n    var isModernAPI = (this._win.Notification && this._win.Notification.requestPermission);\n\n    /* Legacy webkit browsers */\n    var isWebkitAPI = (this._win.webkitNotifications && this._win.webkitNotifications.checkPermission);\n\n    return new Promise((resolvePromise, rejectPromise) => {\n\n      var resolver = result => (isGranted(result)) ? resolvePromise() : rejectPromise();\n\n      if (hasPermissions) {\n       resolver(existing)\n      }\n      else if (isWebkitAPI) {\n        this._win.webkitNotifications.requestPermission(result => { resolver(result) });\n      }\n      else if (isModernAPI) {\n        this._win.Notification.requestPermission().then(result => { resolver(result) }).catch(rejectPromise)\n      }\n      else resolvePromise()\n    })\n  }\n\n  /**\n   * Returns whether Push has been granted permission to run\n   * @return {Boolean}\n   */\n  has() {\n    return this.get() === this.GRANTED;\n  }\n\n  /**\n   * Gets the permission level\n   * @return {Permission} The permission level\n   */\n  get() {\n    let permission;\n\n    /* Safari 6+, Chrome 23+ */\n    if (this._win.Notification && this._win.Notification.permission)\n      permission = this._win.Notification.permission;\n\n    /* Legacy webkit browsers */\n    else if (this._win.webkitNotifications && this._win.webkitNotifications.checkPermission)\n      permission = this._permissions[this._win.webkitNotifications.checkPermission()];\n\n    /* Firefox Mobile */\n    else if (navigator.mozNotification)\n      permission = this.GRANTED;\n\n    /* IE9+ */\n    else if (this._win.external && this._win.external.msIsSiteMode)\n      permission = this._win.external.msIsSiteMode() ? this.GRANTED : this.DEFAULT;\n\n    else\n      permission = this.GRANTED;\n\n    return permission;\n  }\n}\n","import Messages from \"./Messages\";\nimport Permission from \"./Permission\";\nimport Util from \"./Util\";\n/* Import notification agents */\nimport DesktopAgent from \"./agents/DesktopAgent\";\nimport MobileChromeAgent from \"./agents/MobileChromeAgent\";\nimport MobileFirefoxAgent from \"./agents/MobileFirefoxAgent\";\nimport MSAgent from \"./agents/MSAgent\";\nimport WebKitAgent from \"./agents/WebKitAgent\";\n\nexport default class Push {\n\n  constructor(win) {\n    /* Private variables */\n\n    /* ID to use for new notifications */\n    this._currentId = 0;\n\n    /* Map of open notifications */\n    this._notifications = {};\n\n    /* Window object */\n    this._win = win;\n\n    /* Public variables */\n    this.Permission = new Permission(win);\n\n    /* Agents */\n    this._agents = {\n      desktop: new DesktopAgent(win),\n      chrome: new MobileChromeAgent(win),\n      firefox: new MobileFirefoxAgent(win),\n      ms: new MSAgent(win),\n      webkit: new WebKitAgent(win)\n    };\n\n    this._configuration = {\n      serviceWorker: '/serviceWorker.min.js',\n      fallback: function(payload) {}\n    }\n  }\n\n  /**\n   * Closes a notification\n   * @param {Notification} notification\n   * @return {Boolean} boolean denoting whether the operation was successful\n   * @private\n   */\n  _closeNotification(id) {\n    let success = true;\n    const notification = this._notifications[id];\n\n    if (notification !== undefined) {\n      success = this._removeNotification(id);\n\n      /* Safari 6+, Firefox 22+, Chrome 22+, Opera 25+ */\n      if (this._agents.desktop.isSupported())\n        this._agents.desktop.close(notification);\n\n      /* Legacy WebKit browsers */\n      else if (this._agents.webkit.isSupported())\n        this._agents.webkit.close(notification);\n\n      /* IE9 */\n      else if (this._agents.ms.isSupported())\n        this._agents.ms.close();\n\n      else {\n        success = false;\n        throw new Error(Messages.errors.unknown_interface);\n      }\n\n      return success;\n    }\n\n    return false;\n  }\n\n  /**\n   * Adds a notification to the global dictionary of notifications\n   * @param {Notification} notification\n   * @return {Integer} Dictionary key of the notification\n   * @private\n   */\n  _addNotification(notification) {\n    const id = this._currentId;\n    this._notifications[id] = notification;\n    this._currentId++;\n    return id;\n  }\n\n  /**\n   * Removes a notification with the given ID\n   * @param  {Integer} id - Dictionary key/ID of the notification to remove\n   * @return {Boolean} boolean denoting success\n   * @private\n   */\n  _removeNotification(id) {\n    let success = false;\n\n    if (this._notifications.hasOwnProperty(id)) {\n      /* We're successful if we omit the given ID from the new array */\n      delete this._notifications[id];\n      success = true;\n    }\n\n    return success;\n  }\n\n  /**\n   * Creates the wrapper for a given notification\n   *\n   * @param {Integer} id - Dictionary key/ID of the notification\n   * @param {Map} options - Options used to create the notification\n   * @returns {Map} wrapper hashmap object\n   * @private\n   */\n  _prepareNotification(id, options) {\n    let wrapper;\n\n    /* Wrapper used to get/close notification later on */\n    wrapper = {\n      get: () => {\n        return this._notifications[id];\n      },\n\n      close: () => {\n        this._closeNotification(id);\n      }\n    };\n\n    /* Autoclose timeout */\n    if (options.timeout) {\n      setTimeout(() => {\n        wrapper.close();\n      }, options.timeout);\n    }\n\n    return wrapper;\n  }\n\n  /**\n   * Find the most recent notification from a ServiceWorker and add it to the global array\n   * @param notifications\n   * @private\n   */\n  _serviceWorkerCallback(notifications, options, resolve) {\n    let id = this._addNotification(notifications[notifications.length - 1]);\n\n    /* Listen for close requests from the ServiceWorker */\n    navigator.serviceWorker.addEventListener('message', event => {\n      const data = JSON.parse(event.data);\n\n      if (data.action === 'close' && Number.isInteger(data.id))\n        this._removeNotification(data.id);\n    });\n\n    resolve(this._prepareNotification(id, options));\n  }\n\n  /**\n   * Callback function for the 'create' method\n   * @return {void}\n   * @private\n   */\n  _createCallback(title, options, resolve) {\n    let notification = null;\n    let onClose;\n\n    /* Set empty settings if none are specified */\n    options = options || {};\n\n    /* onClose event handler */\n    onClose = (id) => {\n      /* A bit redundant, but covers the cases when close() isn't explicitly called */\n      this._removeNotification(id);\n      if (Util.isFunction(options.onClose)) {\n        options.onClose.call(this, notification);\n      }\n    };\n\n    /* Safari 6+, Firefox 22+, Chrome 22+, Opera 25+ */\n    if (this._agents.desktop.isSupported()) {\n      try {\n        /* Create a notification using the API if possible */\n        notification = this._agents.desktop.create(title, options);\n      } catch (e) {\n        const id = this._currentId;\n        const sw = this.config().serviceWorker;\n        const cb = (notifications) => this._serviceWorkerCallback(notifications, options, resolve);\n        /* Create a Chrome ServiceWorker notification if it isn't supported */\n        if (this._agents.chrome.isSupported()) {\n          this._agents.chrome.create(id, title, options, sw, cb);\n        }\n      }\n      /* Legacy WebKit browsers */\n    } else if (this._agents.webkit.isSupported())\n      notification = this._agents.webkit.create(title, options);\n\n    /* Firefox Mobile */\n    else if (this._agents.firefox.isSupported())\n      this._agents.firefox.create(title, options);\n\n    /* IE9 */\n    else if (this._agents.ms.isSupported())\n      notification = this._agents.ms.create(title, options);\n\n    /* Default fallback */\n    else {\n      options.title = title;\n      this.config().fallback(options);\n    }\n\n    if (notification !== null) {\n      const id = this._addNotification(notification);\n      const wrapper = this._prepareNotification(id, options);\n\n      /* Notification callbacks */\n      if (Util.isFunction(options.onShow))\n        notification.addEventListener('show', options.onShow);\n\n      if (Util.isFunction(options.onError))\n        notification.addEventListener('error', options.onError);\n\n      if (Util.isFunction(options.onClick))\n        notification.addEventListener('click', options.onClick);\n\n      notification.addEventListener('close', () => {\n        onClose(id);\n      });\n\n      notification.addEventListener('cancel', () => {\n        onClose(id);\n      });\n\n      /* Return the wrapper so the user can call close() */\n      resolve(wrapper);\n    }\n\n    /* By default, pass an empty wrapper */\n    resolve(null);\n  }\n\n  /**\n   * Creates and displays a new notification\n   * @param {Array} options\n   * @return {Promise}\n   */\n  create(title, options) {\n    let promiseCallback;\n\n    /* Fail if no or an invalid title is provided */\n    if (!Util.isString(title)) {\n      throw new Error(Messages.errors.invalid_title);\n    }\n\n    /* Request permission if it isn't granted */\n    if (!this.Permission.has()) {\n      promiseCallback = (resolve, reject) => {\n        this.Permission.request().then(() => {\n          this._createCallback(title, options, resolve);\n        }).catch(() => {\n          reject(Messages.errors.permission_denied);\n        })\n      };\n    } else {\n      promiseCallback = (resolve, reject) => {\n        try {\n          this._createCallback(title, options, resolve);\n        } catch (e) {\n          reject(e);\n        }\n      };\n    }\n\n    return new Promise(promiseCallback);\n  }\n\n  /**\n   * Returns the notification count\n   * @return {Integer} The notification count\n   */\n  count() {\n    let count = 0;\n    let key;\n\n    for (key in this._notifications)\n      if (this._notifications.hasOwnProperty(key)) count++;\n\n    return count;\n  }\n\n  /**\n   * Closes a notification with the given tag\n   * @param {String} tag - Tag of the notification to close\n   * @return {Boolean} boolean denoting success\n   */\n  close(tag) {\n    let key, notification;\n\n    for (key in this._notifications) {\n      if (this._notifications.hasOwnProperty(key)) {\n        notification = this._notifications[key];\n\n        /* Run only if the tags match */\n        if (notification.tag === tag) {\n\n          /* Call the notification's close() method */\n          return this._closeNotification(key);\n        }\n      }\n    }\n  }\n\n  /**\n   * Clears all notifications\n   * @return {Boolean} boolean denoting whether the clear was successful in closing all notifications\n   */\n  clear() {\n    let key, success = true;\n\n    for (key in this._notifications)\n      if (this._notifications.hasOwnProperty(key))\n        success = success && this._closeNotification(key);\n\n    return success;\n  }\n\n  /**\n   * Denotes whether Push is supported in the current browser\n   * @returns {boolean}\n   */\n  supported() {\n    let supported = false;\n\n    for (var agent in this._agents)\n      if (this._agents.hasOwnProperty(agent))\n        supported = supported || this._agents[agent].isSupported()\n\n    return supported;\n  }\n\n  /**\n   * Modifies settings or returns all settings if no parameter passed\n   * @param settings\n   */\n  config(settings) {\n    if (typeof settings !== 'undefined' || settings !== null && Util.isObject(settings))\n      Util.objectMerge(this._configuration, settings);\n    return this._configuration;\n  }\n\n  /**\n   * Copies the functions from a plugin to the main library\n   * @param plugin\n   */\n  extend(manifest) {\n    var plugin, Plugin,\n      hasProp = {}.hasOwnProperty;\n\n    if (!hasProp.call(manifest, 'plugin')) {\n      throw new Error(Messages.errors.invalid_plugin);\n    } else {\n      if (hasProp.call(manifest, 'config') && Util.isObject(manifest.config) && manifest.config !== null) {\n        this.config(manifest.config);\n      }\n\n      Plugin = manifest.plugin;\n      plugin = new Plugin(this.config())\n\n      for (var member in plugin) {\n        if (hasProp.call(plugin, member) && Util.isFunction(plugin[member]))\n          this[member] = plugin[member];\n      }\n    }\n  }\n}\n","export default class Util {\n  static isUndefined(obj) {\n    return obj === undefined;\n  }\n\n  static isString(obj) {\n    return typeof obj === 'string';\n  }\n\n  static isFunction(obj) {\n    return obj && {}.toString.call(obj) === '[object Function]';\n  }\n\n  static isObject(obj) {\n    return typeof obj === 'object'\n  }\n\n  static objectMerge(target, source) {\n    for (var key in source) {\n      if (target.hasOwnProperty(key) && this.isObject(target[key]) && this.isObject(source[key])) {\n        this.objectMerge(target[key], source[key]);\n      } else {\n        target[key] = source[key]\n      }\n    }\n  }\n}\n","export default class AbstractAgent {\n  constructor(win) {\n    this._win = win;\n  }\n}\n","import AbstractAgent from './AbstractAgent';\nimport Util from '../Util';\n\n/**\n * Notification agent for modern desktop browsers:\n * Safari 6+, Firefox 22+, Chrome 22+, Opera 25+\n */\nexport default class DesktopAgent extends AbstractAgent {\n\n  /**\n   * Returns a boolean denoting support\n   * @returns {Boolean} boolean denoting whether webkit notifications are supported\n   */\n  isSupported() {\n    return this._win.Notification !== undefined;\n  }\n\n  /**\n   * Creates a new notification\n   * @param title - notification title\n   * @param options - notification options array\n   * @returns {Notification}\n   */\n  create(title, options) {\n    return new this._win.Notification(\n      title,\n      {\n        icon: (Util.isString(options.icon) || Util.isUndefined(options.icon)) ? options.icon : options.icon.x32,\n        body: options.body,\n        tag: options.tag,\n        requireInteraction: options.requireInteraction\n      }\n    );\n  }\n\n  /**\n   * Close a given notification\n   * @param notification - notification to close\n   */\n  close(notification) {\n    notification.close();\n  }\n}\n","import AbstractAgent from './AbstractAgent';\nimport Util from '../Util';\n\n/**\n * Notification agent for IE9\n */\nexport default class MSAgent extends AbstractAgent {\n\n  /**\n   * Returns a boolean denoting support\n   * @returns {Boolean} boolean denoting whether webkit notifications are supported\n   */\n  isSupported() {\n    return (this._win.external !== undefined) && (this._win.external.msIsSiteMode !== undefined);\n  }\n\n  /**\n   * Creates a new notification\n   * @param title - notification title\n   * @param options - notification options array\n   * @returns {Notification}\n   */\n  create(title, options) {\n    /* Clear any previous notifications */\n    this._win.external.msSiteModeClearIconOverlay();\n\n    this._win.external.msSiteModeSetIconOverlay(\n      ((Util.isString(options.icon) || Util.isUndefined(options.icon))\n        ? options.icon\n        : options.icon.x16), title\n    );\n\n    this._win.external.msSiteModeActivate();\n\n    return null;\n  }\n\n  /**\n   * Close a given notification\n   * @param notification - notification to close\n   */\n  close() {\n    this._win.external.msSiteModeClearIconOverlay()\n  }\n}\n","import AbstractAgent from './AbstractAgent';\nimport Util from '../Util';\nimport Messages from '../Messages';\n\n/**\n * Notification agent for modern desktop browsers:\n * Safari 6+, Firefox 22+, Chrome 22+, Opera 25+\n */\nexport default class MobileChromeAgent extends AbstractAgent {\n\n  /**\n   * Returns a boolean denoting support\n   * @returns {Boolean} boolean denoting whether webkit notifications are supported\n   */\n  isSupported() {\n    return this._win.navigator !== undefined &&\n      this._win.navigator.serviceWorker !== undefined;\n  }\n\n  /**\n   * Returns the function body as a string\n   * @param func\n   */\n  getFunctionBody(func) {\n    return func.toString().match(/function[^{]+{([\\s\\S]*)}$/)[1];\n  }\n\n  /**\n   * Creates a new notification\n   * @param title - notification title\n   * @param options - notification options array\n   * @returns {Notification}\n   */\n  create(id, title, options, serviceWorker, callback) {\n    /* Register ServiceWorker */\n    this._win.navigator.serviceWorker.register(serviceWorker);\n\n    this._win.navigator.serviceWorker.ready.then(registration => {\n      /* Local data the service worker will use */\n      let localData = {\n        id: id,\n        link: options.link,\n        origin: document.location.href,\n        onClick: (Util.isFunction(options.onClick)) ? this.getFunctionBody(options.onClick) : '',\n        onClose: (Util.isFunction(options.onClose)) ? this.getFunctionBody(options.onClose) : ''\n      };\n\n      /* Merge the local data with user-provided data */\n      if (options.data !== undefined && options.data !== null)\n        localData = Object.assign(localData, options.data);\n\n      /* Show the notification */\n      registration.showNotification(\n        title,\n        {\n          icon: options.icon,\n          body: options.body,\n          vibrate: options.vibrate,\n          tag: options.tag,\n          data: localData,\n          requireInteraction: options.requireInteraction,\n          silent: options.silent\n        }\n      ).then(() => {\n\n        registration.getNotifications().then(notifications => {\n          /* Send an empty message so the ServiceWorker knows who the client is */\n          registration.active.postMessage('');\n\n          /* Trigger callback */\n          callback(notifications);\n        });\n      }).catch(function(error) {\n        throw new Error(Messages.errors.sw_notification_error + error.message);\n      });\n    }).catch(function(error) {\n      throw new Error(Messages.errors.sw_registration_error + error.message);\n    });\n  }\n\n  /**\n   * Close all notification\n   */\n  close() {\n    // Can't do this with service workers\n  }\n}\n","import AbstractAgent from './AbstractAgent';\n\n/**\n * Notification agent for modern desktop browsers:\n * Safari 6+, Firefox 22+, Chrome 22+, Opera 25+\n */\nexport default class MobileFirefoxAgent extends AbstractAgent {\n\n  /**\n   * Returns a boolean denoting support\n   * @returns {Boolean} boolean denoting whether webkit notifications are supported\n   */\n  isSupported() {\n    return this._win.navigator.mozNotification !== undefined;\n  }\n\n  /**\n   * Creates a new notification\n   * @param title - notification title\n   * @param options - notification options array\n   * @returns {Notification}\n   */\n  create(title, options) {\n    let notification = this._win.navigator.mozNotification.createNotification(\n      title,\n      options.body,\n      options.icon\n    );\n\n    notification.show();\n\n    return notification;\n  }\n}\n","import AbstractAgent from './AbstractAgent';\n\n/**\n * Notification agent for old Chrome versions (and some) Firefox\n */\nexport default class WebKitAgent extends AbstractAgent {\n\n  /**\n   * Returns a boolean denoting support\n   * @returns {Boolean} boolean denoting whether webkit notifications are supported\n   */\n  isSupported() {\n    return this._win.webkitNotifications !== undefined;\n  }\n\n  /**\n   * Creates a new notification\n   * @param title - notification title\n   * @param options - notification options array\n   * @returns {Notification}\n   */\n  create(title, options) {\n    let notification = this._win.webkitNotifications.createNotification(\n      options.icon,\n      title,\n      options.body\n    );\n\n    notification.show();\n\n    return notification;\n  }\n\n  /**\n   * Close a given notification\n   * @param notification - notification to close\n   */\n  close(notification) {\n    notification.cancel();\n  }\n}\n","import Push from './classes/Push';\n\nmodule.exports = new Push(typeof window !== 'undefined' ? window : this);\n"]}